import r from"isomorphic-unfetch";import{createClient as e}from"@supabase/supabase-js";function a(){return a=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(r[t]=a[t])}return r},a.apply(this,arguments)}class t{constructor(r){this.version=void 0,this.basePath=void 0,this.defaultVersion="v1/",this.defaultBaseURL="https://api.spotbase.io/",this.authToken=void 0,this.supabase=void 0,this.version=r&&r.version&&r.version+"/"||this.defaultVersion,this.basePath=r&&r.basePath&&r.basePath+"/"+this.version||this.defaultBaseURL+this.version,this.supabase=e("https://yijpzmbtxcpgpswkvyfd.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlpanB6bWJ0eGNwZ3Bzd2t2eWZkIiwicm9sZSI6ImFub24iLCJpYXQiOjE2OTQwOTAyNTgsImV4cCI6MjAwOTY2NjI1OH0.I66q9wcZlkYXTMN1RKB_hLorD71jWq2ehaNxjA31Imk")}request(e,t,o){const s=this.basePath+e;let n={"Content-type":"application/json"};t&&(n=a({},n,{Authorization:"Bearer "+this.getAuthToken()}));const i=a({},o,{headers:n});return r(s,i).then(r=>{if(r.ok)return r.json();throw new Error(r.statusText)})}setAuthToken(r){r&&(this.authToken=r)}getAuthToken(){return this.authToken}}let o="project/PROJECT/addon/cms/TOKEN/",s="project/PROJECT/";class n extends t{}var i;i=n,[class extends t{async getCMSConfig(r,e){if(!e||!r)return{data:{},error:new Error("project and token are required")};const a=o.replace("PROJECT",r).replace("TOKEN",e),t=await this.request(a+"config");return t?{data:t,error:null}:{data:{},error:new Error("error getting cms config")}}async patchCMSConfig(r,e,a){if(!e||!r||!a)return{data:"error",error:new Error("project, token and config are required")};const t=o.replace("PROJECT",r).replace("TOKEN",e),{data:s,error:n}=await this.request(t+"config",!0,{method:"PATCH",body:JSON.stringify(a)});return n?{data:"error",error:new Error(n.message)}:{data:s,error:null}}async getItems(r,e){if(!e||!r)return{data:"error",error:new Error("project and token are required")};const a=o.replace("PROJECT",r).replace("TOKEN",e),{data:t,error:s}=await this.request(a+"items");return s?{data:"error",error:new Error(s.message)}:{data:t,error:null}}async getFields(r,e){if(!e||!r)return{data:"error",error:new Error("project and token are required")};const a=o.replace("PROJECT",r).replace("TOKEN",e),{data:t,error:s}=await this.request(a+"fields",!0);return s?{data:"error",error:new Error(s.message)}:{data:t,error:null}}async getProgress(r,e){if(!e||!r)return{data:"error",error:new Error("project and token are required")};const a=o.replace("PROJECT",r).replace("TOKEN",e),{data:t,error:s}=await this.request(a+"progress",!0);return s?{data:"error",error:new Error(s.message)}:{data:t,error:null}}async getAddon(r){if(!r)return{data:null,error:new Error("addon id is required")};const{data:e,error:a}=await this.supabase.from("addons").select().eq("id",r).maybeSingle();return a?{data:null,error:new Error(a.message)}:{data:{id:e.id,name:e.name,project:e.project,type:e.type,user_id:e.user_id,data:e.data},error:null}}async getAddons(r,e,a){const{data:t,error:o}=await this.supabase.from("addons").select("id,created_at,name,project,type,data,user_id").order("created_at",{ascending:!1}).range(e,a).eq("project",r);if(o)return{data:[],error:new Error(o.message)};let s=[];return t.forEach(r=>{s.push({id:r.id,name:r.name,project:r.project,type:r.type,user_id:r.user_id,data:r.data})}),{data:s,error:null}}},class extends t{async login(r,e){const{data:a}=await this.supabase.auth.signInWithPassword({email:r,password:e});return a.session?(this.setAuthToken(a.session.access_token),{data:!0,error:null}):{data:!1,error:new Error("login error")}}async logout(){const{error:r}=await this.supabase.auth.signOut();200!=r.status&&console.log(r.message)}async isLogged(){const{data:r}=await this.supabase.auth.getSession();return r.session?(this.setAuthToken(r.session.access_token),{data:!0,error:null}):{data:!1,error:new Error("is logged error")}}},class extends t{async getProjectDomains(r){if(!r)return{data:[],error:new Error("project id is required")};const e=s.replace("PROJECT",r),{data:a,error:t}=await this.request(e+"domains",!0);if(t)return{data:[],error:new Error(t.message)};let o=[];return a.forEach(r=>{o.push({id:r.id,name:r.name,value:r.value})}),{data:o,error:null}}async patchProjectDomains(r,e){if(!r||!e)return{data:"error",error:new Error("project id and domains data are required")};const a=s.replace("PROJECT",r),{error:t}=await this.request(a+"domains",!0,{method:"PATCH",body:JSON.stringify(e)});return t?{data:"error",error:new Error(t.message)}:{data:"ok",error:null}}async deleteProjectDomains(r,e){if(!r||!e)return{data:"error",error:new Error("project id and domains data are required")};const a=s.replace("PROJECT",r),{error:t}=await this.request(a+"domains",!0,{method:"DELETE",body:JSON.stringify(e)});return t?{data:"error",error:new Error(t.message)}:{data:"ok",error:null}}async getProjects(r,e){const{data:a,error:t}=await this.supabase.from("projects").select("id,name,description,emoji,domains").order("created_at",{ascending:!1}).range(r,e);if(t)return{data:[],error:new Error(t.message)};let o=[];return a.forEach(r=>{let e={id:r.id,description:r.description,emoji:r.emoji,name:r.name,domains:[]};r.domains.forEach(r=>{e.domains.push({id:r.id,name:r.name,value:r.value})}),o.push(e)}),{data:o,error:null}}async getProject(r){if(!r)return{data:null,error:new Error("project id is required")};const{data:e,error:a}=await this.supabase.from("projects").select().eq("id",r).maybeSingle();if(a)return{data:null,error:new Error(a.message)};let t={id:e.id,description:e.description,emoji:e.emoji,name:e.name,domains:[]};return e.domains.forEach(r=>{t.domains.push({id:r.id,name:r.name,value:r.value})}),{data:t,error:null}}}].forEach(r=>{Object.getOwnPropertyNames(r.prototype).forEach(e=>{Object.defineProperty(i.prototype,e,Object.getOwnPropertyDescriptor(r.prototype,e))})});export{n as default};
//# sourceMappingURL=index.modern.js.map
