{"version":3,"file":"index.umd.js","sources":["../src/base.ts","../src/utils.ts","../src/cms/index.ts","../src/auth/index.ts","../src/project/index.ts","../src/index.ts"],"sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport { createClient, SupabaseClient } from '@supabase/supabase-js'\n\ntype Config = {\n    version?: string,\n    basePath?: string,\n}\n\nexport type Pagination = {\n    page?: number,\n    per_page?: number,\n}\n\nexport abstract class Base {\n    private version: string\n    private basePath: string\n    private defaultVersion = 'v1/';\n    private defaultBaseURL = 'https://api.spotbase.io/'\n    private authToken: string\n    protected supabase: SupabaseClient\n\n    constructor(config: Config) {\n        this.version =  config && config.version ? config.version + '/' || this.defaultVersion : this.defaultVersion;\n        this.basePath = config && config.basePath ? config.basePath + '/' + this.version || this.defaultBaseURL + this.version : this.defaultBaseURL + this.version;\n        this.supabase = createClient('https://yijpzmbtxcpgpswkvyfd.supabase.co', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlpanB6bWJ0eGNwZ3Bzd2t2eWZkIiwicm9sZSI6ImFub24iLCJpYXQiOjE2OTQwOTAyNTgsImV4cCI6MjAwOTY2NjI1OH0.I66q9wcZlkYXTMN1RKB_hLorD71jWq2ehaNxjA31Imk');\n    }\n    \n    protected request<T> (endpoint: string, auth?: boolean, options?: RequestInit): Promise<T> {\n        const url = this.basePath + endpoint\n        let headers = {\n            'Content-type': 'application/json'\n        }\n\n        if (auth) {\n            headers = {...headers, ...{'Authorization': 'Bearer '+this.getAuthToken()}}\n        }\n\n        const config = {\n            ...options,\n            headers\n        }\n\n        return fetch(url, config).then(r => {\n            if (r.ok) {\n                return r.json()\n            }\n\n            throw new Error(r.statusText)\n        })\n    }\n\n    protected setAuthToken (token: string) {\n        if (!token) {\n            return\n        }\n\n        this.authToken = token\n    }\n\n    protected getAuthToken (): string {\n        return this.authToken;\n    }\n}\n","export function applyMixins(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n      Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n        Object.defineProperty(\n          derivedCtor.prototype,\n          name,\n          Object.getOwnPropertyDescriptor(baseCtor.prototype, name)\n        );\n      });\n    });\n}\n","import { Config, Addon } from './types'\nimport { Base } from '../base'\n\nlet path = 'project/PROJECT/addon/cms/TOKEN/';\n\nexport class CMS extends Base {\n    async getCMSConfig (project: string, token: string): Promise<{data: Config, error: Error | null}> {\n        if (!token || !project) {\n            return {data: {}, error: new Error(\"project and token are required\")};\n        }\n\n        const getPath = path.replace(\"PROJECT\", project).replace(\"TOKEN\", token);\n\n        const data =  await this.request<Config>(getPath + 'config');\n\n        if (!data) {\n            return {data: {}, error: new Error(\"error getting cms config\")}\n        }\n\n        return {data: data, error: null}\n    }\n\n    async patchCMSConfig (project: string, token: string, config: Config): Promise<{data: string, error: Error | null}> {\n        if (!token || !project || !config) {\n            return {data: \"error\", error: new Error(\"project, token and config are required\")};\n        }\n\n        const patchPath = path.replace(\"PROJECT\", project).replace(\"TOKEN\", token);\n\n        const {data, error } = await this.request<any>(patchPath + 'config', true, {\n            method: 'PATCH',\n            body: JSON.stringify(config)\n        })\n\n        if (error) {\n            return {data: \"error\", error: new Error(error.message)}\n        }\n\n        return {data: data, error: null}\n    }\n\n    async getItems (project: string, token: string): Promise<{data: any, error: Error | null}> {\n        if (!token || !project) {\n            return {data: \"error\", error: new Error(\"project and token are required\")};\n        }\n\n        const getPath = path.replace(\"PROJECT\", project).replace(\"TOKEN\", token);\n\n        const {data, error } = await this.request<any>(getPath + 'items');\n\n        if (error) {\n            return {data: \"error\", error: new Error(error.message)}\n        }\n\n        return {data: data, error: null}\n    }\n\n    async getFields (project: string, token: string): Promise<{data: any, error: Error | null}> {\n        if (!token || !project) {\n            return {data: \"error\", error: new Error(\"project and token are required\")};\n        }\n\n        const getPath = path.replace(\"PROJECT\", project).replace(\"TOKEN\", token);\n\n        const {data, error } = await this.request<any>(getPath + 'fields', true)\n\n        if (error) {\n            return {data: \"error\", error: new Error(error.message)}\n        }\n\n        return {data: data, error: null}\n    }\n\n    async getProgress (project: string, token: string): Promise<{data: any, error: Error | null}> {\n        if (!token || !project) {\n            return {data: \"error\", error: new Error(\"project and token are required\")};\n        }\n\n        const getPath = path.replace(\"PROJECT\", project).replace(\"TOKEN\", token);\n\n        const {data, error } = await this.request<any>(getPath + 'progress', true)\n\n        if (error) {\n            return {data: \"error\", error: new Error(error.message)}\n        }\n\n        return {data: data, error: null}\n    }\n\n    async getAddon (id: string): Promise<{data: Addon, error: Error | null}> {\n        if (!id) {\n            return { data: null, error: new Error(\"addon id is required\")};\n        }\n\n        const { data, error } = await this.supabase.from(\"addons\")\n        .select().eq(\"id\", id).maybeSingle();\n\n        if (error) {\n            return { data: null, error: new Error(error.message)};\n        }\n\n        let addon: Addon = {\n            id: data.id,\n            name: data.name,\n            project: data.project,\n            type: data.type,\n            user_id: data.user_id,\n            data: data.data\n        };\n\n        return { data: addon, error: null};\n    }\n\n    async getAddons(project_id: string, start: number, offset: number): Promise<{data: Addon[],error: Error | null}> {\n        const { data, error } = await this.supabase.from(\"addons\")\n        .select(`id,created_at,name,project,type,data,user_id`)\n        .order(\"created_at\", { ascending: false })\n        .range(start, offset)\n        .eq(\"project\", project_id)\n\n        if (error) {\n            return { data: [], error: new Error(error.message)};\n        }\n\n        let addons: Addon[] = [];\n        data.forEach(element => {\n            let addon: Addon = {\n                id: element.id,\n                name: element.name,\n                project: element.project,\n                type: element.type,\n                user_id: element.user_id,\n                data: element.data\n            };\n            addons.push(addon);\n        });\n\n        return { data: addons, error: null};\n    }\n}\n","import { Base } from '../base'\n\nexport class Auth extends Base {\n    async login (user: string, password: string): Promise<{data: boolean, error: Error | null}> {\n        const { data } = await this.supabase.auth.signInWithPassword({\n            email: user,\n            password: password\n        });\n\n        if (data.session) {\n            this.setAuthToken(data.session.access_token);\n\n            return {data: true, error: null}\n        }\n\n        return {data: false, error: new Error(\"login error\")}\n    }\n\n    async logout () {\n        const { error } = await this.supabase.auth.signOut();\n\n        if (error.status != 200) {\n            console.log(error.message)\n        }\n    }\n\n    async isLogged(): Promise<{data: boolean, error: Error | null}> {\n        const { data } = await this.supabase.auth.getSession();\n        if (data.session) {\n            this.setAuthToken(data.session.access_token);\n            return {data: true, error: null}\n        }\n\n        return {data: false, error: new Error(\"is logged error\")}\n    }\n}","import { Base } from '../base'\nimport { Domain, UserProject } from './types'\n\nlet path = 'project/PROJECT/';\n\nexport class Project extends Base {\n    async getProjectDomains (project: string): Promise<{data: Domain[],error: Error | null}> {\n        if (!project) {\n            return { data: [], error: new Error(\"project id is required\")};\n        }\n\n        const getPath = path.replace(\"PROJECT\", project);\n\n        const { data, error } = await this.request<any>(getPath + 'domains', true);\n\n        if (error) {\n            return { data: [], error: new Error(error.message)};\n        }\n\n        let domains: Domain[] = [];\n        data.forEach(element => {\n            let domain: Domain = {\n                id: element.id,\n                name: element.name,\n                value: element.value\n            };\n            domains.push(domain);\n        });\n\n        return { data: domains, error: null};\n    }\n\n    async patchProjectDomains (project: string, domains: Domain[]): Promise<{data: string, error: Error | null}> {\n        if (!project || ! domains) {\n            return { data: \"error\", error: new Error(\"project id and domains data are required\")};\n        }\n\n        const patchPath = path.replace(\"PROJECT\", project);\n\n        const { data, error } = await this.request<any>(patchPath + 'domains', true, {\n            method: 'PATCH',\n            body: JSON.stringify(domains)\n        })\n\n        if (error) {\n            return { data: \"error\", error: new Error(error.message)};\n        }\n\n        return { data: \"ok\", error: null};\n    }\n\n    async deleteProjectDomains (project: string, domains: Domain[]): Promise<{data: string, error: Error | null}> {\n        if (!project || ! domains) {\n            return { data: \"error\", error: new Error(\"project id and domains data are required\")};\n        }\n\n        const deletePath = path.replace(\"PROJECT\", project);\n\n        const { data, error } = await this.request<any>(deletePath + 'domains', true, {\n            method: 'DELETE',\n            body: JSON.stringify(domains)\n        });\n\n        if (error) {\n            return { data: \"error\", error: new Error(error.message)};\n        }\n\n        return { data: \"ok\", error: null};\n    }\n\n    async getProjects(start: number, offset: number): Promise<{data: UserProject[],error: Error | null}> {\n        const { data, error } = await this.supabase.from(\"projects\")\n        .select(`id,name,description,emoji,domains`)\n        .order(\"created_at\", { ascending: false })\n        .range(start, offset)\n\n        if (error) {\n            return { data: [], error: new Error(error.message)};\n        }\n\n        let projects: UserProject[] = [];\n        data.forEach(element => {\n            let project: UserProject = {\n                id: element.id,\n                description: element.description,\n                emoji: element.emoji,\n                name: element.name,\n                domains: []\n            };\n            element.domains.forEach(domain => {\n                let userProjectDomain: Domain = {\n                    id: domain.id,\n                    name: domain.name,\n                    value: domain.value\n                };\n                project.domains.push(userProjectDomain);\n            });\n            projects.push(project);\n        });\n\n        return { data: projects, error: null};\n    }\n\n    async getProject(id: string): Promise<{data: UserProject,error: Error | null}> {\n        if (!id) {\n            return { data: null, error: new Error(\"project id is required\")};\n        }\n\n        const { data, error } = await this.supabase.from(\"projects\")\n        .select().eq(\"id\", id).maybeSingle();\n\n        if (error) {\n            return { data: null, error: new Error(error.message)};\n        }\n\n        let project: UserProject = {\n            id: data.id,\n            description: data.description,\n            emoji: data.emoji,\n            name: data.name,\n            domains: []\n        };\n        data.domains.forEach(domain => {\n            let userProjectDomain: Domain = {\n                id: domain.id,\n                name: domain.name,\n                value: domain.value\n            };\n            project.domains.push(userProjectDomain);\n        });\n\n        return { data: project, error: null};\n    }\n}\n","import { CMS } from './cms'\nimport { Auth } from './auth'\nimport { Project } from './project'\nimport { applyMixins } from './utils'\nimport { Base } from './base'\n\nclass Spotbase extends Base {}\ninterface Spotbase extends CMS, Auth, Project {}\napplyMixins(Spotbase, [CMS, Auth, Project]);\n\nexport default Spotbase\n"],"names":["derivedCtor","Base","config","version","basePath","defaultVersion","defaultBaseURL","this","authToken","supabase","createClient","_proto","prototype","request","endpoint","auth","options","url","headers","_extends","Authorization","getAuthToken","fetch","then","r","ok","json","Error","statusText","setAuthToken","token","path","CMS","_Base","apply","arguments","_inheritsLoose","getCMSConfig","project","Promise","resolve","data","error","getPath","replace","e","reject","patchCMSConfig","patchPath","method","body","JSON","stringify","_ref","message","getItems","_ref2","getFields","_ref3","getProgress","_ref4","getAddon","id","from","select","eq","maybeSingle","_ref5","name","type","user_id","getAddons","project_id","start","offset","order","ascending","range","_ref6","addons","forEach","element","push","Auth","login","user","password","_this","signInWithPassword","email","session","access_token","logout","signOut","status","console","log","isLogged","_this3","getSession","Project","getProjectDomains","domains","value","patchProjectDomains","deleteProjectDomains","deletePath","getProjects","projects","description","emoji","domain","getProject","Spotbase","baseCtor","Object","getOwnPropertyNames","defineProperty","getOwnPropertyDescriptor"],"mappings":"u3BAasB,ICbMA,EDaNC,EAAI,WAQtB,SAAAA,EAAYC,GAPJC,KAAAA,aACAC,EAAAA,KAAAA,cACAC,EAAAA,KAAAA,eAAiB,MACjBC,KAAAA,eAAiB,2BAA0BC,KAC3CC,eAAS,EAAAD,KACPE,cAAQ,EAGdF,KAAKJ,QAAWD,GAAUA,EAAOC,SAAUD,EAAOC,QAAU,KAA6BI,KAAKF,eAC9FE,KAAKH,SAAWF,GAAUA,EAAOE,UAAWF,EAAOE,SAAW,IAAMG,KAAKJ,SAAgDI,KAAKD,eAAiBC,KAAKJ,QACpJI,KAAKE,SAAWC,EAAYA,aAAC,2CAA4C,mNAC7E,CAAC,IAAAC,EAAAV,EAAAW,iBAAAD,EAESE,QAAA,SAAYC,EAAkBC,EAAgBC,GACpD,IAAMC,EAAMV,KAAKH,SAAWU,EACxBI,EAAU,CACV,eAAgB,oBAGhBH,IACAG,EAAOC,EAAA,CAAA,EAAOD,EAAY,CAACE,cAAiB,UAAUb,KAAKc,kBAG/D,IAAMnB,EAAMiB,EAAA,GACLH,EAAO,CACVE,QAAAA,IAGJ,OAAOI,EAAK,QAACL,EAAKf,GAAQqB,KAAK,SAAAC,GAC3B,GAAIA,EAAEC,GACF,OAAOD,EAAEE,OAGb,MAAU,IAAAC,MAAMH,EAAEI,WACtB,EACJ,EAACjB,EAESkB,aAAA,SAAcC,GACfA,IAILvB,KAAKC,UAAYsB,EACrB,EAACnB,EAESU,aAAA,WACN,OAAWd,KAACC,SAChB,EAACP,CAAA,CAhDqB,GEVtB8B,EAAO,mCAEEC,EAAI,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA3B,KAAA4B,YAAAxB,IAAAA,CAAAyB,EAAAJ,EAAAC,GAAAtB,IAAAA,EAAAqB,EAAApB,UAqIZoB,OArIYrB,EACP0B,aAAYA,SAAEC,EAAiBR,GAAa,IAC9C,IAAKA,IAAUQ,EACX,OAAAC,QAAAC,QAAO,CAACC,KAAM,GAAIC,MAAO,IAAIf,MAAM,oCAGvC,IAAMgB,EAAUZ,EAAKa,QAAQ,UAAWN,GAASM,QAAQ,QAASd,GAAO,OAAAS,QAAAC,QAErDjC,KAAKM,QAAgB8B,EAAU,WAASpB,KAAtDkB,SAAAA,GAED,OAAAA,EAIE,CAACA,KAAMA,EAAMC,MAAO,MAHhB,CAACD,KAAM,CAAA,EAAIC,MAAO,IAAIf,MAAM,4BAA4B,EAIvE,CAAC,MAAAkB,GAAAN,OAAAA,QAAAO,OAAAD,EAAAlC,CAAAA,EAAAA,EAEKoC,eAAcA,SAAET,EAAiBR,EAAe5B,GAAc,IAChE,IAAK4B,IAAUQ,IAAYpC,EACvB,OAAAqC,QAAAC,QAAO,CAACC,KAAM,QAASC,MAAO,IAAIf,MAAM,4CAG5C,IAAMqB,EAAYjB,EAAKa,QAAQ,UAAWN,GAASM,QAAQ,QAASd,GAAO,OAAAS,QAAAC,QAE9CjC,KAAKM,QAAamC,EAAY,UAAU,EAAM,CACvEC,OAAQ,QACRC,KAAMC,KAAKC,UAAUlD,MACvBqB,KAAA,SAAA8B,GAAA,IAHKZ,EAAIY,EAAJZ,KAAMC,EAAKW,EAALX,MAAK,OAKdA,EACO,CAACD,KAAM,QAASC,MAAO,IAAIf,MAAMe,EAAMY,UAG3C,CAACb,KAAMA,EAAMC,MAAO,KAAK,EACpC,CAAC,MAAAG,GAAAN,OAAAA,QAAAO,OAAAD,EAAAlC,CAAAA,EAAAA,EAEK4C,SAAQ,SAAEjB,EAAiBR,GAAa,IAC1C,IAAKA,IAAUQ,EACX,OAAAC,QAAAC,QAAO,CAACC,KAAM,QAASC,MAAO,IAAIf,MAAM,oCAG5C,IAAMgB,EAAUZ,EAAKa,QAAQ,UAAWN,GAASM,QAAQ,QAASd,GAAO,OAAAS,QAAAC,QAE5CjC,KAAKM,QAAa8B,EAAU,UAAQpB,KAAA,SAAAiC,GAAA,IAA1Df,EAAIe,EAAJf,KAAMC,EAAKc,EAALd,MAAK,OAEdA,EACO,CAACD,KAAM,QAASC,MAAO,IAAIf,MAAMe,EAAMY,UAG3C,CAACb,KAAMA,EAAMC,MAAO,KAAK,EACpC,CAAC,MAAAG,GAAAN,OAAAA,QAAAO,OAAAD,EAAAlC,CAAAA,EAAAA,EAEK8C,UAAS,SAAEnB,EAAiBR,GAAa,IAC3C,IAAKA,IAAUQ,EACX,OAAAC,QAAAC,QAAO,CAACC,KAAM,QAASC,MAAO,IAAIf,MAAM,oCAG5C,IAAMgB,EAAUZ,EAAKa,QAAQ,UAAWN,GAASM,QAAQ,QAASd,GAAO,OAAAS,QAAAC,QAE5CjC,KAAKM,QAAa8B,EAAU,UAAU,IAAKpB,KAAAmC,SAAAA,GAAjE,IAAAjB,EAAIiB,EAAJjB,KAAMC,EAAKgB,EAALhB,MAET,OAAAA,EACO,CAACD,KAAM,QAASC,MAAO,IAAIf,MAAMe,EAAMY,UAG3C,CAACb,KAAMA,EAAMC,MAAO,KAAK,EACpC,CAAC,MAAAG,GAAA,OAAAN,QAAAO,OAAAD,EAAA,CAAA,EAAAlC,EAEKgD,YAAWA,SAAErB,EAAiBR,GAAa,IAC7C,IAAKA,IAAUQ,EACX,OAAAC,QAAAC,QAAO,CAACC,KAAM,QAASC,MAAO,IAAIf,MAAM,oCAG5C,IAAMgB,EAAUZ,EAAKa,QAAQ,UAAWN,GAASM,QAAQ,QAASd,GAAO,OAAAS,QAAAC,QAE5CjC,KAAKM,QAAa8B,EAAU,YAAY,IAAKpB,KAAAqC,SAAAA,GAAnE,IAAAnB,EAAImB,EAAJnB,KAAMC,EAAKkB,EAALlB,MAET,OAAAA,EACO,CAACD,KAAM,QAASC,MAAO,IAAIf,MAAMe,EAAMY,UAG3C,CAACb,KAAMA,EAAMC,MAAO,KAAK,EACpC,CAAC,MAAAG,GAAA,OAAAN,QAAAO,OAAAD,EAAAlC,CAAAA,EAAAA,EAEKkD,SAAQA,SAAEC,GAAU,IACtB,OAAKA,EAEJvB,QAAAC,QAE6BjC,KAAKE,SAASsD,KAAK,UAChDC,SAASC,GAAG,KAAMH,GAAII,eAAa3C,KAAA,SAAA4C,GAAA,IAD5B1B,EAAI0B,EAAJ1B,KAAMC,EAAKyB,EAALzB,MAGd,OAAIA,EACO,CAAED,KAAM,KAAMC,MAAO,IAAIf,MAAMe,EAAMY,UAYzC,CAAEb,KATU,CACfqB,GAAIrB,EAAKqB,GACTM,KAAM3B,EAAK2B,KACX9B,QAASG,EAAKH,QACd+B,KAAM5B,EAAK4B,KACXC,QAAS7B,EAAK6B,QACd7B,KAAMA,EAAKA,MAGOC,MAAO,KAAM,GAnB/BH,QAAAC,QAAO,CAAEC,KAAM,KAAMC,MAAO,IAAIf,MAAM,yBAoB9C,CAAC,MAAAkB,GAAA,OAAAN,QAAAO,OAAAD,EAAAlC,CAAAA,EAAAA,EAEK4D,UAASA,SAACC,EAAoBC,EAAeC,GAAc,WAC3BnC,QAAAC,QAAJjC,KAAKE,SAASsD,KAAK,UAChDC,OAAqD,gDACrDW,MAAM,aAAc,CAAEC,WAAW,IACjCC,MAAMJ,EAAOC,GACbT,GAAG,UAAWO,IAAWjD,KAAA,SAAAuD,GAAA,IAJlBrC,EAAIqC,EAAJrC,KAAMC,EAAKoC,EAALpC,MAMd,GAAIA,EACA,MAAO,CAAED,KAAM,GAAIC,MAAO,IAAIf,MAAMe,EAAMY,UAG9C,IAAIyB,EAAkB,GAatB,OAZAtC,EAAKuC,QAAQ,SAAAC,GASTF,EAAOG,KARY,CACfpB,GAAImB,EAAQnB,GACZM,KAAMa,EAAQb,KACd9B,QAAS2C,EAAQ3C,QACjB+B,KAAMY,EAAQZ,KACdC,QAASW,EAAQX,QACjB7B,KAAMwC,EAAQxC,MAGtB,GAEO,CAAEA,KAAMsC,EAAQrC,MAAO,KAAM,EACxC,CAAC,MAAAG,GAAAN,OAAAA,QAAAO,OAAAD,EAAAb,CAAAA,EAAAA,CAAA,CArIY,CAAQ/B,GCHZkF,EAAKlD,SAAAA,GAAA,SAAAkD,IAAA,OAAAlD,EAAAC,MAAA3B,KAAA4B,YAAAxB,IAAAA,CAAAyB,EAAA+C,EAAAlD,GAAAtB,IAAAA,EAAAwE,EAAAvE,UAgCbuE,OAhCaxE,EACRyE,MAAK,SAAEC,EAAcC,GAAgB,IAAA,IAAAC,EAChBhF,KAAIgC,OAAAA,QAAAC,QAAJ+C,EAAK9E,SAASM,KAAKyE,mBAAmB,CACzDC,MAAOJ,EACPC,SAAUA,KACZ/D,KAAA8B,SAAAA,GAHM,IAAAZ,EAAIY,EAAJZ,KAKR,OAAIA,EAAKiD,SACLH,EAAK1D,aAAaY,EAAKiD,QAAQC,cAExB,CAAClD,MAAM,EAAMC,MAAO,OAGxB,CAACD,MAAM,EAAOC,MAAO,IAAIf,MAAM,eAAe,EACzD,CAAC,MAAAkB,GAAA,OAAAN,QAAAO,OAAAD,EAAAlC,CAAAA,EAAAA,EAEKiF,OAAMA,WAAA,IACoBrD,OAAAA,QAAAC,QAAJjC,KAAKE,SAASM,KAAK8E,WAAStE,KAAAiC,SAAAA,GAA5C,IAAAd,EAAKc,EAALd,MAEY,KAAhBA,EAAMoD,QACNC,QAAQC,IAAItD,EAAMY,QAE1B,EAAA,CAAC,MAAAT,GAAA,OAAAN,QAAAO,OAAAD,EAAA,CAAA,EAAAlC,EAEKsF,SAAQA,WAAA,IAAA,IAAAC,EACa3F,KAAIgC,OAAAA,QAAAC,QAAJ0D,EAAKzF,SAASM,KAAKoF,cAAY5E,KAAA,SAAAmC,GAA9C,IAAAjB,EAAIiB,EAAJjB,KACR,OAAIA,EAAKiD,SACLQ,EAAKrE,aAAaY,EAAKiD,QAAQC,cACxB,CAAClD,MAAM,EAAMC,MAAO,OAGxB,CAACD,MAAM,EAAOC,MAAO,IAAIf,MAAM,mBAAmB,EAC7D,CAAC,MAAAkB,GAAA,OAAAN,QAAAO,OAAAD,EAAAsC,CAAAA,EAAAA,CAAA,CAhCalD,CAAQhC,GCCtB8B,EAAO,mBAEEqE,EAAQnE,SAAAA,GAAA,SAAAmE,IAAA,OAAAnE,EAAAC,MAAAC,KAAAA,YAAAxB,IAAAA,CAAAyB,EAAAgE,EAAAnE,GAAAtB,IAAAA,EAAAyF,EAAAxF,UA+HhB,OA/HgBD,EACX0F,kBAAiB,SAAE/D,GAAe,IACpC,IAAKA,EACD,OAAAC,QAAAC,QAAO,CAAEC,KAAM,GAAIC,MAAO,IAAIf,MAAM,4BAGxC,IAAMgB,EAAUZ,EAAKa,QAAQ,UAAWN,GAAS,OAAAC,QAAAC,QAEnBjC,KAAKM,QAAa8B,EAAU,WAAW,IAAKpB,KAAA,SAAA8B,GAAA,IAAlEZ,EAAIY,EAAJZ,KAAMC,EAAKW,EAALX,MAEd,GAAIA,EACA,MAAO,CAAED,KAAM,GAAIC,MAAO,IAAIf,MAAMe,EAAMY,UAG9C,IAAIgD,EAAoB,GAUxB,OATA7D,EAAKuC,QAAQ,SAAAC,GAMTqB,EAAQpB,KALa,CACjBpB,GAAImB,EAAQnB,GACZM,KAAMa,EAAQb,KACdmC,MAAOtB,EAAQsB,OAGvB,GAEO,CAAE9D,KAAM6D,EAAS5D,MAAO,KAAM,EACzC,CAAC,MAAAG,GAAA,OAAAN,QAAAO,OAAAD,EAAAlC,CAAAA,EAAAA,EAEK6F,6BAAqBlE,EAAiBgE,GAAiB,IACzD,IAAKhE,IAAagE,EACd,OAAA/D,QAAAC,QAAO,CAAEC,KAAM,QAASC,MAAO,IAAIf,MAAM,8CAG7C,IAAMqB,EAAYjB,EAAKa,QAAQ,UAAWN,GAAS,OAAAC,QAAAC,QAErBjC,KAAKM,QAAamC,EAAY,WAAW,EAAM,CACzEC,OAAQ,QACRC,KAAMC,KAAKC,UAAUkD,MACvB/E,KAAA,SAAAiC,GAHM,IAAMd,EAAKc,EAALd,MAAK,OAKfA,EACO,CAAED,KAAM,QAASC,MAAO,IAAIf,MAAMe,EAAMY,UAG5C,CAAEb,KAAM,KAAMC,MAAO,KAAK,EACrC,CAAC,MAAAG,GAAA,OAAAN,QAAAO,OAAAD,EAAAlC,CAAAA,EAAAA,EAEK8F,8BAAsBnE,EAAiBgE,GAAiB,IAC1D,IAAKhE,IAAagE,EACd,OAAA/D,QAAAC,QAAO,CAAEC,KAAM,QAASC,MAAO,IAAIf,MAAM,8CAG7C,IAAM+E,EAAa3E,EAAKa,QAAQ,UAAWN,GAAS,OAAAC,QAAAC,QAEtBjC,KAAKM,QAAa6F,EAAa,WAAW,EAAM,CAC1EzD,OAAQ,SACRC,KAAMC,KAAKC,UAAUkD,MACvB/E,KAAA,SAAAmC,GAHM,IAAMhB,EAAKgB,EAALhB,MAAK,OAKfA,EACO,CAAED,KAAM,QAASC,MAAO,IAAIf,MAAMe,EAAMY,UAG5C,CAAEb,KAAM,KAAMC,MAAO,KAAK,EACrC,CAAC,MAAAG,GAAAN,OAAAA,QAAAO,OAAAD,EAAA,CAAA,EAAAlC,EAEKgG,YAAWA,SAAClC,EAAeC,GAAc,IACTnC,OAAAA,QAAAC,QAAJjC,KAAKE,SAASsD,KAAK,YAChDC,OAAM,qCACNW,MAAM,aAAc,CAAEC,WAAW,IACjCC,MAAMJ,EAAOC,IAAOnD,KAAA,SAAAqC,GAAA,IAHbnB,EAAImB,EAAJnB,KAAMC,EAAKkB,EAALlB,MAKd,GAAIA,EACA,MAAO,CAAED,KAAM,GAAIC,MAAO,IAAIf,MAAMe,EAAMY,UAG9C,IAAIsD,EAA0B,GAoB9B,OAnBAnE,EAAKuC,QAAQ,SAAAC,GACT,IAAI3C,EAAuB,CACvBwB,GAAImB,EAAQnB,GACZ+C,YAAa5B,EAAQ4B,YACrBC,MAAO7B,EAAQ6B,MACf1C,KAAMa,EAAQb,KACdkC,QAAS,IAEbrB,EAAQqB,QAAQtB,QAAQ,SAAA+B,GAMpBzE,EAAQgE,QAAQpB,KALgB,CAC5BpB,GAAIiD,EAAOjD,GACXM,KAAM2C,EAAO3C,KACbmC,MAAOQ,EAAOR,OAGtB,GACAK,EAAS1B,KAAK5C,EAClB,GAEO,CAAEG,KAAMmE,EAAUlE,MAAO,KAAM,EAC1C,CAAC,MAAAG,UAAAN,QAAAO,OAAAD,EAAA,CAAA,EAAAlC,EAEKqG,WAAUA,SAAClD,GAAU,IACvB,OAAKA,EAEJvB,QAAAC,QAE6BjC,KAAKE,SAASsD,KAAK,YAChDC,SAASC,GAAG,KAAMH,GAAII,eAAa3C,KAAA4C,SAAAA,GAD5B,IAAA1B,EAAI0B,EAAJ1B,KAAMC,EAAKyB,EAALzB,MAGd,GAAIA,EACA,MAAO,CAAED,KAAM,KAAMC,MAAO,IAAIf,MAAMe,EAAMY,UAGhD,IAAIhB,EAAuB,CACvBwB,GAAIrB,EAAKqB,GACT+C,YAAapE,EAAKoE,YAClBC,MAAOrE,EAAKqE,MACZ1C,KAAM3B,EAAK2B,KACXkC,QAAS,IAWb,OATA7D,EAAK6D,QAAQtB,QAAQ,SAAA+B,GAMjBzE,EAAQgE,QAAQpB,KALgB,CAC5BpB,GAAIiD,EAAOjD,GACXM,KAAM2C,EAAO3C,KACbmC,MAAOQ,EAAOR,OAGtB,GAEO,CAAE9D,KAAMH,EAASI,MAAO,KAAM,GA1BjCH,QAAAC,QAAO,CAAEC,KAAM,KAAMC,MAAO,IAAIf,MAAM,2BA2B9C,CAAC,MAAAkB,GAAA,OAAAN,QAAAO,OAAAD,EAAA,CAAA,EAAAuD,CAAA,CA/HgBnE,CAAQhC,GCCvBgH,EAAS,SAAAhF,GAAAgF,SAAAA,IAAAhF,OAAAA,EAAAC,MAAAC,KAAAA,YAAA8E,IAAAA,CAAAA,OAAA7E,EAAA6E,EAAAhF,GAAAgF,CAAA,CAAA,CAAQhH,UJNKD,EIQhBiH,EAAU,CAACjF,EAAKmD,EAAMiB,GJPpBpB,QAAQ,SAAAkC,GAChBC,OAAOC,oBAAoBF,EAAStG,WAAWoE,QAAQ,SAAAZ,GACrD+C,OAAOE,eACLrH,EAAYY,UACZwD,EACA+C,OAAOG,yBAAyBJ,EAAStG,UAAWwD,GAExD,EACF"}